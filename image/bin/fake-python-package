#!/bin/bash
#
# @url https://github.com/akatrevorjay/docker-boilerplate
#
set -eo pipefail
source "${APP_ROOT:?}/image/lib.sh"

#
# Main
#

header=("# Generated via \"$0 $*\" on $(date)\n")
namespaced_contents=(
    "try:\n"
    "    from pkgutil import extend_path\n"
    "    __path__ = extend_path(__path__, __name__)\n"
    "except ImportError:\n"
    "    import pkg_resources\n"
    "    pkg_resources.declare_namespace(__name__)\n"
)


fake_py_package() {
    local root_path="$1"; shift

    if [ $# -eq 0 ]; then
        echo 'Usage: $0 ROOT_PATH [PACKAGE[:OPTS] ...]' >&2
        return 1
    fi

    local pkg pkg_path contents opt
    for pkg in "$@"; do
        opt=""
        case "$pkg" in
            *:*) opt="${pkg#*:}" pkg="${pkg%:*}" ;;
        esac

        contents=("${header[@]}")
        [[ "$opt" != "namespace" ]] || \
            contents+=("${namespaced_contents[@]}")

        # Replace periods with slashes
        pkg_path="$root_path/${pkg//\./\/}"

        e "Faking python package \"$pkg\" in \"$pkg_path\"' [opt=$opt]."

        mkdir -pv "$pkg_path"

        local fn="$pkg_path/__init__.py"
        [[ -e "$fn" ]] || \
            echo -- "${contents[@]}" > "$fn"
    done
}

fake_py_package "$@"

